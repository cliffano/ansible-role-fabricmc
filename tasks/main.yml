---
- name: Ensure install directory existence
  ansible.builtin.file:
    path: "{{ fabmc_install_dir }}"
    state: directory
    mode: 0755

- name: Ensure sub directories existence
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: 0755
  loop:
    - "{{ fabmc_install_dir }}/bin"
    - "{{ fabmc_install_dir }}/workspace"

- name: "Get the status of Minecraft Server Launcher {{ fabmc_minecraft_version }} Fabric Loader {{ fabmc_fabric_loader_version }} Installer {{ fabmc_installer_version }} jar file"
  ansible.builtin.stat:
    path: "{{ fabmc_install_dir }}/bin/minecraft_server_launcher.{{ fabmc_minecraft_version }}-{{ fabmc_fabric_loader_version }}-{{ fabmc_installer_version }}.jar"
  register: minecraft_server_launcher_version_jar_file

- name: Download Minecraft Server Launcher jar file
  ansible.builtin.get_url:
    url: "https://meta.fabricmc.net/v2/versions/loader/{{ fabmc_minecraft_version }}/{{ fabmc_fabric_loader_version }}/{{ fabmc_installer_version }}/server/jar"
    dest: "{{ fabmc_install_dir }}/bin/server.jar"
    mode: 0644
  when: not minecraft_server_launcher_version_jar_file.stat.exists

- name: Get the status of Minecraft Server Launcher jar file
  ansible.builtin.stat:
    path: "{{ fabmc_install_dir }}/bin/server.jar"
    checksum_algorithm: sha1
  register: minecraft_server_launcher_jar_file
  when: not minecraft_server_launcher_version_jar_file.stat.exists

# TODO: need to build an API client for automating checksum provisioning into vars
# - name: Fail if downloaded Minecraft Server Launcher jar file checksum does not match
#   ansible.builtin.fail:
#     msg: "Downloaded Minecraft Server Launcher jar file checksum {{ minecraft_server_launcher_jar_file.stat.checksum }} does not match the expected checksum {{ minecraft_versions[fabmc_minecraft_version]['sha1'] }}"
#   when: not minecraft_server_launcher_version_jar_file.stat.exists and minecraft_server_launcher_jar_file.stat.checksum != minecraft_versions[fabmc_minecraft_version]['sha1']

- name: "Copy Minecraft Server Launcher jar file as Minecraft Server Launcher {{ fabmc_minecraft_version }} jar file"
  ansible.builtin.copy:
    remote_src: true
    src: "{{ fabmc_install_dir }}/bin/server.jar"
    dest: "{{ fabmc_install_dir }}/bin/minecraft_server_launcher.{{ fabmc_minecraft_version }}-{{ fabmc_fabric_loader_version }}-{{ fabmc_installer_version }}.jar"
    mode: 0644
  when: not minecraft_server_launcher_version_jar_file.stat.exists and minecraft_server_launcher_jar_file.stat.exists

- name: Delete Minecraft Server Launcher jar file
  ansible.builtin.file:
    path: "{{ fabmc_install_dir }}/bin/server.jar"
    state: absent

- name: Create symbolic link for Minecraft Server Launcher jar file
  ansible.builtin.file:
    src: "{{ fabmc_install_dir }}/bin/minecraft_server_launcher.{{ fabmc_minecraft_version }}-{{ fabmc_fabric_loader_version }}-{{ fabmc_installer_version }}.jar"
    dest: "{{ fabmc_install_dir }}/bin/minecraft_server_launcher.jar"
    state: link

- name: Get the status of Minecraft Server Launcher start script file
  ansible.builtin.stat:
    path: "{{ fabmc_install_dir }}/bin/start.sh"
  register: minecraft_start_script_file

- name: Create Minecraft Server Launcher start script
  ansible.builtin.copy:
    content: |
      java {{ fabmc_java_opts }} -jar {{ fabmc_install_dir }}/bin/minecraft_server_launcher.jar nogui
    dest: "{{ fabmc_install_dir }}/bin/start.sh"
    mode: 0755
  when: not minecraft_start_script_file.stat.exists